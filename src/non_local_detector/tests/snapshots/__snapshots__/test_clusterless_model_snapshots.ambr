# serializer version: 1
# name: test_clusterless_decoder_snapshot[posterior_summary]
  dict({
    'dtype': 'float32',
    'first_5': list([
      1.9468870959826745e-08,
      5.433183503100736e-08,
      1.7823427356233879e-07,
      5.957490998298454e-07,
      1.8952069922306691e-06,
    ]),
    'last_5': list([
      3.466594781502743e-19,
      7.31018281404324e-20,
      1.6921430227018417e-20,
      4.403664011987968e-21,
      1.2738280530212939e-21,
    ]),
    'max': 0.18298926949501038,
    'mean': 0.011904762126505375,
    'min': 0.0,
    'shape': tuple(
      500,
      84,
    ),
    'std': 0.031634386628866196,
    'sum': 500.0,
  })
# ---
# name: test_clusterless_decoder_snapshot[state_probabilities]
  dict({
    'max': 1.000000238418579,
    'mean': 1.0,
    'min': 0.9999997615814209,
    'shape': tuple(
      500,
    ),
  })
# ---
# name: test_clusterless_encoding_model_snapshot[mean_rates_summary]
  dict({
    'n_electrodes': 4,
    'rates': list([
      0.058400001376867294,
      0.03139999881386757,
      0.032999999821186066,
      0.03180000185966492,
    ]),
  })
# ---
# name: test_clusterless_encoding_model_snapshot[occupancy_summary]
  dict({
    'max': 0.011862837709486485,
    'mean': 0.005550175439566374,
    'min': 0.0042543173767626286,
    'shape': tuple(
      84,
    ),
    'sum': 0.46621471643447876,
  })
# ---
# name: test_contfrag_clusterless_classifier_snapshot[posterior_summary]
  dict({
    'dtype': 'float32',
    'first_5': list([
      9.055584814632311e-05,
      9.05100314412266e-05,
      9.03815234778449e-05,
      9.03200707398355e-05,
      9.087444777833298e-05,
    ]),
    'last_5': list([
      0.0030791168101131916,
      0.0031272100750356913,
      0.003167081857100129,
      0.0031980357598513365,
      0.0032208815682679415,
    ]),
    'max': 0.18263192474842072,
    'mean': 0.0059523810632526875,
    'min': 8.516813052501543e-17,
    'shape': tuple(
      500,
      168,
    ),
    'std': 0.02291184291243553,
    'sum': 500.0,
  })
# ---
# name: test_contfrag_clusterless_classifier_snapshot[state_probabilities]
  dict({
    'max_per_state': dict({
      'Continuous': 0.9999198913574219,
      'Fragmented': 0.2347736805677414,
    }),
    'mean_per_state': dict({
      'Continuous': 0.9897478222846985,
      'Fragmented': 0.010252131149172783,
    }),
    'min_per_state': dict({
      'Continuous': 0.7652262449264526,
      'Fragmented': 8.02369904704392e-05,
    }),
    'shape': tuple(
      500,
      2,
    ),
    'states': list([
      np.str_('Continuous'),
      np.str_('Fragmented'),
    ]),
  })
# ---
